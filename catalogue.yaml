---
- name: catalogue configuration
  hosts: catalogue
  become: yes
  vars:
  tasks: 
  - name: disable default nodejs
    ansible.builtin.command: dnf module disable nodejs -y

  - name: enable nodejs 20
    ansible.builtin.command: dnf module enable nodejs:20 -y

  - name: install nodejs
    ansible.builtin.package:
      name: nodejs
      state: present

  - name: create roboshop system user
    ansible.builtin.user:
      name: roboshop
      system: true
      shell: /sbin/nologin
      state: present
      home: /app

  - name: create a directory
    ansible.builtin.file:
      path: /app
      state: directory

  - name: Download file to destination
    ansible.builtin.get_url:
      url: https://roboshop-artifacts.s3.amazonaws.com/catalogue-v3.zip 
      dest: /tmp/catalogue.zip 

  - name: change directory
    ansible.builtin.shell: 
      chdir: /app
  
  - name: Extract foo.tgz into /var/lib/foo
    ansible.builtin.unarchive:
      src: tmp/catalogue.zip
      dest: /app

  - name: change directory
    ansible.builtin.shell: 
      chdir: /app

  - name: npm install
    ansible.builtin.command: npm install

  - name: copy the catalogue service 
    ansible.builtin.copy:
      src: catalogue.service
      dest: /etc/systemd/system/catalogue.service

  - name: Reload systemd daemon
    ansible.builtin.systemd_service:
      daemon_reload: true

  - name: copy the mongo repo 
    ansible.builtin.copy:
      src: mongo.repo
      dest: /etc/yum.repos.d/mongo.repo

  - name: mongo client install
    ansible.builtin.package:
      name: mongodb-mongosh
      state: present

  - name: loda the master data products to mongodb
    ansible.builtin.shell: mongosh --host  172.31.1.252 </app/db/master-data.js

  - name: start the mongodb
    ansible.builtin.service:
      name: catalogue
      state: started
      enabled: yes











